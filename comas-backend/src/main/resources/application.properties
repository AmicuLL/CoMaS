spring.application.name=company_managment

spring.datasource.url=jdbc:postgresql://localhost:5432/company
spring.datasource.username=admin
spring.datasource.password=admin
spring.jpa.hibernate.ddl-auto= create-drop
  #update
  #create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false

server.error.include-message=always

server.port=8443
# FOR HTTPS
#server.http.port=8080
#server.ssl.key-store=classpath:YOUR_SSL_CERT_FILE.pfx
#server.ssl.key-store-password=YOUR_PASSWORD
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=YOUR_ALIAS

# # # # Security
security.jwt.secret=8aef8cb26f1cadef9c625f96be7bf5a39b44d53d9a4f416a731353dfebefdd26
# Automatically generated secret key for JWT encryption
# Strongly recommended to generate a new secret for security reasons!
# Search for JWT Secret generator. 64 chars or 256 bits

security.jwt.expire.access.token=1800000
# Access tokens expire after 30 minutes (value expressed in miliseconds)

security.jwt.expire.refresh.token=21600000
# Refresh tokens expire after 6 hours (value expressed in miliseconds), requiring a new login

security.bcrypt.salt=12
# Reasonably strong hashing, ensuring security without significant delays

isRegKeyRequired=True
# Allows employee users to register freely without requiring an employee code.
# False - Disabled (registration without an employee code)
# True - Enabled (employee code is required for registration) - just clients can register




########################################################################################################
# # # # # # # # # # # #                  NOT IMPLEMENTED (YET?)                  # # # # # # # # # # # #
########################################################################################################

security.users.allowed.devices=1
# Devices used by users will be registered, and only those devices can access the system
# 0 - Disabled (no device restrictions)
# 1 - Enabled (only the device used during account creation is allowed, or changed afterwards)
# 2+ - A verification code will be sent via email or app, or can be manually generated
# Admin can bypass the device limit and issue access codes for users as needed.
# Admin accounts have no device restrictions unless "security.admins.allowed.devices = [number]" is set.

security.admins.allowed.devices=0
# 0 - No device restrictions for admins
# 1+ - Limits the number of devices an admin can use, similar to user restrictions


# # # # Economy
economy.tracking.enabled=true
# Enables or disables financial tracking features, such as salaries, prices, and costs
# false - Disabled (financial data is not stored or processed)
# true - Enabled (salaries, costs, and pricing information are managed within the system)

economy.access.roles=accounting,finance,admin
# Defines which roles have access to financial data
# Tracking must be enabled
# Example roles: accounting, finance, admin
# Only users with these roles can view or manage financial information

economy.access.users=SysOP,user2,user3
# (Optional) Specific users who can access financial data, even if their role isn't listed above
# Leave empty to allow only the specified roles

economy.permissions.read=true
# Controls whether users with access can only read financial data
# false - Users cannot read financial data
# true - Users can view financial data

economy.permissions.write=false
# Controls whether users with access can modify financial data
# false - Users cannot edit financial data
# true - Users can add or modify financial data
